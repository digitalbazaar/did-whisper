#!/usr/bin/env node
const yargs = require('yargs');
const getStdin = require('get-stdin');
const whisper = require('../lib/index');

const DEFAULT_EXPIRATION = 604800; // 1 week, in seconds
const DEFAULT_URL = 'http://localhost:5000/whisper';

yargs
  .usage('$0 <cmd> [args]')

  .help('h')

  .alias('h', 'help')

  .demandCommand(1, 'Please specify a command')

  .command(
    'encrypt <did> [message]',
    "encrypt an anonymous message for the recipient's DID",
    yargs => {
      yargs
        .positional('did', {
          describe: 'DID of recipient',
          type: 'string'
        })
        .positional('message', {
          describe: 'message to be encrypted',
          type: 'string'
        });
    },
    argv => {
      Promise.resolve()
        .then(() => argv.message || getStdin())
        .then(message => whisper.encryptForDid(argv.did, message,
          DEFAULT_EXPIRATION))
        .then(encrypted => whisper.saveMessage(encrypted, DEFAULT_URL))
        .then(console.log) // display the resulting tiny url
        .catch(console.error);
    }
  )

  .command(
    'decrypt <did> [message]',
    'decrypt a message intended for the DID',
    yargs => {
      yargs
        .positional('did', {
          describe: 'DID of recipient',
          type: 'string'
        })
        .positional('message', {
          describe: 'cipher message to be decrypted',
          type: 'string',
          optional: true
        });
    },
    argv => {
      Promise.resolve()
        .then(() => argv.message || getStdin())
        .then(cipher => whisper.decryptForDid(argv.did, Buffer.from(cipher, 'hex')))
        .then(message => {
          console.log(message.toString());
        })
        .catch(console.error);
    }
  );

yargs.argv;
